import base64;exec base64.b64decode('# -*- coding: utf-8 -*-
import sys , os , re , unicodedata
import xbmcgui
import xbmcplugin
import xbmcaddon
import urllib , urllib2
import urlparse
from urlparse import parse_qsl
import sqlite3 , base64 , zlib
if 64 - 64: i11iIiiIii
def OO0o ( s ) :
 return '' . join ( ( c for c in unicodedata . normalize ( 'NFD' , s ) if unicodedata . category ( c ) != 'Mn' ) )
 if 81 - 81: Iii1I1 + OO0O0O % iiiii % ii1I - ooO0OO000o
def ii11i ( ) :
 import xbmc
 oOooOoO0Oo0O = xbmc . Keyboard ( "" )
 oOooOoO0Oo0O . doModal ( )
 iI1 = ''
 if ( oOooOoO0Oo0O . isConfirmed ( ) ) :
  iI1 = oOooOoO0Oo0O . getText ( )
 return iI1
 if 43 - 43: I11i11Ii
oO00oOo = xbmcaddon . Addon ( )
OOOo0 = xbmc . translatePath ( oO00oOo . getAddonInfo ( 'path' ) . decode ( 'utf-8' ) )
Oooo000o = xbmc . translatePath ( oO00oOo . getAddonInfo ( 'profile' ) . decode ( 'utf-8' ) )
IiIi11iIIi1Ii = os . path . join ( OOOo0 , "resources/media/" )
Oo0O = '%s/thebas.tmp' % Oooo000o
IiI = '%s/rkobas.tmp' % Oooo000o
if not os . path . exists ( Oooo000o ) :
 try :
  os . makedirs ( Oooo000o )
 except : pass
ooOo = urlparse . parse_qs ( sys . argv [ 2 ] [ 1 : ] )
Oo = sys . argv [ 0 ]
o0O = int ( sys . argv [ 1 ] )
IiiIII111iI = base64 . b64decode ( 'aHR0cDovL3d3dy5hZGRvbmNpbmUuY2xvdWQv' )
if 34 - 34: iii1I1I / O00oOoOoO0o0O . O0oo0OO0 + Oo0ooO0oo0oO . I1i1iI1i - II
def OoI1Ii11I1Ii1i ( ) :
 Ooo = [ ]
 Ooo . append ( { 'title' : 'Géneros' , 'action' : 'genero' , 'ico' : 'gen' } )
 Ooo . append ( { 'title' : 'Temas' , 'action' : 'tema' , 'ico' : 'tem' } )
 Ooo . append ( { 'title' : 'Años' , 'action' : 'anno' , 'ico' : 'ann' } )
 Ooo . append ( { 'title' : 'Grupos' , 'action' : 'grupo' , 'ico' : 'gru' } )
 Ooo . append ( { 'title' : 'Países' , 'action' : 'pais' , 'ico' : 'gru' } )
 Ooo . append ( { 'title' : 'Buscar por título' , 'action' : 'bustit' , 'ico' : 'bus' } )
 Ooo . append ( { 'title' : 'Buscar por director' , 'action' : 'busdir' , 'ico' : 'bus' } )
 Ooo . append ( { 'title' : 'Buscar por actor' , 'action' : 'busact' , 'ico' : 'bus' } )
 Ooo . append ( { 'title' : 'Buscar por grupo' , 'action' : 'busgru' , 'ico' : 'bus' } )
 Ooo . append ( { 'title' : 'Ver peli recomendada' , 'action' : 'pelrec' , 'ico' : 'bus' } )
 Ooo . append ( { 'title' : 'Últimas 2016-2017' , 'action' : 'ultim' , 'ico' : 'bus' } )
 Ooo . append ( { 'title' : 'Últimas hasta 2015' , 'action' : 'ultim2' , 'ico' : 'bus' } )
 Ooo . append ( { 'title' : 'Últimas 100 HD' , 'action' : 'ulthd' , 'ico' : 'bus' } )
 Ooo . append ( { 'title' : 'Las 100 más vistas' , 'action' : 'mvtas' , 'ico' : 'bus' } )
 return Ooo
 if 56 - 56: ooO00oOoo - O0OOo
def II1Iiii1111i ( url , post = None ) :
 i1IIi11111i = { 'User-Agent' : 'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-GB; rv:1.8.1.14) Gecko/20080404 Firefox/2.0.0.14' }
 o000o0o00o0Oo = urllib2 . urlopen
 oo = urllib2 . Request
 IiII1I1i1i1ii = oo ( url , post , i1IIi11111i )
 IIIII = o000o0o00o0Oo ( IiII1I1i1i1ii )
 I1 = IIIII . read ( )
 return I1
 if 54 - 54: oO % IiiIIiiI11 / oooOOOOO * IiiIII111ii / i1iIIi1
def ii11iIi1I ( string ) :
 iI111I11I1I1 = 'sYt87gAUt0_z'
 string = base64 . urlsafe_b64decode ( string )
 OOooO0OOoo = [ ]
 for iIii1 in xrange ( len ( string ) ) :
  if 71 - 71: O00oOoOoO0o0O
  oO0O = iI111I11I1I1 [ iIii1 % len ( iI111I11I1I1 ) ]
  OOoO000O0OO = chr ( ord ( string [ iIii1 ] ) - ord ( oO0O ) % 256 )
  OOooO0OOoo . append ( OOoO000O0OO )
 iiI1IiI = "" . join ( OOooO0OOoo )
 return iiI1IiI
 if 13 - 13: iii1I1I . i11iIiiIii - OO0O0O - O0oo0OO0
def ii1IOooO0 ( user , cole , peli ) :
 II11iiii1Ii = 'http://diskokosmiko.mx'
 OO0oOoo = peli
 O0o0Oo = '%s/-%s/p,%s,list,1,3.avi' % ( user , cole , peli )
 Oo00OOOOO = '%s/%s/' % ( II11iiii1Ii , user )
 O0O = { 'User-agent' : 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:19.0) Gecko/20100101 Firefox/19.0' }
 O00o0OO = '%s/%s' % ( II11iiii1Ii , O0o0Oo )
 O0O [ 'referer' ] = Oo00OOOOO
 O0O [ 'connection' ] = 'keep-alive'
 IiII1I1i1i1ii = urllib2 . Request ( O00o0OO , None , O0O )
 IIIII = urllib2 . urlopen ( IiII1I1i1i1ii )
 I1 = IIIII . read ( )
 IIIII . close ( )
 I11i1 = re . findall ( 'DownloadFile.*f=%s".*RequestVerificationToken.*?value="([^"]+)' % peli , I1 )
 iIi1ii1I1 = 0
 try :
  I11i1 = I11i1 [ 0 ]
 except :
  iIi1ii1I1 = 1
 if iIi1ii1I1 == 0 :
  o0 = '%s/action/DownloadFile?location=fi&amp;f=%s' % ( II11iiii1Ii , OO0oOoo )
  I11II1i = 'fileId=%s&__RequestVerificationToken=%s' % ( OO0oOoo , I11i1 )
  O0O [ 'referer' ] = O00o0OO
  O0O [ 'connection' ] = 'keep-alive'
  IiII1I1i1i1ii = urllib2 . Request ( o0 , I11II1i , O0O )
  IIIII = urllib2 . urlopen ( IiII1I1i1i1ii )
  I1 = IIIII . read ( )
  IIIII . close ( )
  IIIIIooooooO0oo = re . findall ( 'DownloadUrl":"([^"]+)' , I1 )
  IIiiiiiiIi1I1 = IIIIIooooooO0oo [ 0 ]
 else :
  IIiiiiiiIi1I1 = ''
 return IIiiiiiiIi1I1 . strip ( )
 if 13 - 13: oooOOOOO + O0oo0OO0 - iiiii + IiiIII111ii . IiiIIiiI11 + O00oOoOoO0o0O
def Ii ( server , user , cole , peli ) :
 oo0O0oOOO00oO = 'http://%s/%s/z-%s/z,%s,list,1,2.bin' % ( server , user , cole , peli )
 I11II1i = None
 i1IIi11111i = { 'User-Agent' : 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:50.0) Gecko/20100101 Firefox/50.0' }
 i1IIi11111i [ 'Connection' ] = 'keep-alive'
 o000o0o00o0Oo = urllib2 . urlopen
 oo = urllib2 . Request
 IiII1I1i1i1ii = oo ( oo0O0oOOO00oO , I11II1i , i1IIi11111i )
 IIIII = o000o0o00o0Oo ( IiII1I1i1i1ii )
 OooOooooOOoo0 = IIIII . info ( ) [ 'Set-Cookie' ]
 I1 = IIIII . read ( )
 o00OO0OOO0 = re . search ( 'action="(\/action\/DownloadFile\?location=fi&amp;f=.*?)".*?__RequestVerificationToken.*?value="(.*?)"' , I1 )
 if 83 - 83: iiiii
 Iii111II = 'http://%s%s' % ( server , o00OO0OOO0 . group ( 1 ) . replace ( '&amp;' , '&' ) )
 I11i1 = o00OO0OOO0 . group ( 2 )
 i1IIi11111i = { 'User-Agent' : 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:50.0) Gecko/20100101 Firefox/50.0' }
 i1IIi11111i [ 'Referer' ] = oo0O0oOOO00oO
 i1IIi11111i [ 'Cookie' ] = OooOooooOOoo0
 i1IIi11111i [ 'Connection' ] = 'keep-alive'
 I11II1i = 'fileId=%s&__RequestVerificationToken=%s' % ( peli , I11i1 )
 o000o0o00o0Oo = urllib2 . urlopen
 oo = urllib2 . Request
 IiII1I1i1i1ii = oo ( Iii111II , I11II1i , i1IIi11111i )
 IIIII = o000o0o00o0Oo ( IiII1I1i1i1ii )
 I1 = IIIII . read ( )
 import time
 iiii11I = str ( int ( time . time ( ) ) ) + '404'
 O00o0OO = 'http://%s/action/OAuth/Facebook?TimeStamp=%s' % ( server , iiii11I )
 i1IIi11111i = { 'User-Agent' : 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:50.0) Gecko/20100101 Firefox/50.0' }
 i1IIi11111i [ 'Referer' ] = oo0O0oOOO00oO
 i1IIi11111i [ 'Cookie' ] = OooOooooOOoo0
 i1IIi11111i [ 'Connection' ] = 'keep-alive'
 I11II1i = None
 o000o0o00o0Oo = urllib2 . urlopen
 oo = urllib2 . Request
 IiII1I1i1i1ii = oo ( O00o0OO , I11II1i , i1IIi11111i )
 IIIII = o000o0o00o0Oo ( IiII1I1i1i1ii )
 Ooo0OO0oOO = IIIII . info ( ) [ 'Set-Cookie' ]
 I1 = IIIII . read ( )
 ii11i1 = OooOooooOOoo0 . split ( ';' )
 IIIii1II1II = Ooo0OO0oOO . split ( ';' )
 for i1I1iI in IIIii1II1II :
  if i1I1iI not in ii11i1 :
   ii11i1 . append ( i1I1iI )
 IIIii1II1II = [ ]
 for i1I1iI in ii11i1 :
  if 'path=/' not in i1I1iI and 'HttpOnly' not in i1I1iI :
   IIIii1II1II . append ( i1I1iI )
 OooOooooOOoo0 = '; ' . join ( IIIii1II1II ) . replace ( '  ' , ' ' )
 o0 = 'http://%s/action/Account/Login' % server
 i1IIi11111i = { 'User-Agent' : 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:50.0) Gecko/20100101 Firefox/50.0' }
 i1IIi11111i [ 'Accept' ] = '*/*'
 i1IIi11111i [ 'Accept-Language' ] = 'es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3'
 i1IIi11111i [ 'Accept-Encoding' ] = 'gzip, deflate'
 i1IIi11111i [ 'Content-Type' ] = 'application/x-www-form-urlencoded; charset=UTF-8'
 i1IIi11111i [ 'X-Requested-With' ] = 'XMLHttpRequest'
 i1IIi11111i [ 'Referer' ] = oo0O0oOOO00oO
 i1IIi11111i [ 'Cookie' ] = OooOooooOOoo0
 i1IIi11111i [ 'Connection' ] = 'keep-alive'
 I11II1i = '__RequestVerificationToken=%s&UserName=addoncine&Password=a1b2c3d4' % I11i1
 o000o0o00o0Oo = urllib2 . urlopen
 oo = urllib2 . Request
 IiII1I1i1i1ii = oo ( o0 , I11II1i , i1IIi11111i )
 IIIII = o000o0o00o0Oo ( IiII1I1i1i1ii )
 Ooo0OO0oOO = IIIII . info ( ) [ 'Set-Cookie' ]
 I1 = IIIII . read ( )
 ii11i1 = OooOooooOOoo0 . split ( ';' )
 IIIii1II1II = Ooo0OO0oOO . split ( ';' )
 for i1I1iI in IIIii1II1II :
  if i1I1iI not in ii11i1 :
   ii11i1 . append ( i1I1iI )
 IIIii1II1II = [ ]
 for i1I1iI in ii11i1 :
  if 'path=/' not in i1I1iI and 'HttpOnly' not in i1I1iI :
   IIIii1II1II . append ( i1I1iI )
 OooOooooOOoo0 = '; ' . join ( IIIii1II1II ) . replace ( '  ' , ' ' )
 Ooo0OO0oOO = ''
 i1IIi11111i = { 'User-Agent' : 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:50.0) Gecko/20100101 Firefox/50.0' }
 i1IIi11111i [ 'Referer' ] = oo0O0oOOO00oO
 i1IIi11111i [ 'Cookie' ] = OooOooooOOoo0
 i1IIi11111i [ 'Connection' ] = 'keep-alive'
 I11II1i = 'fileId=%s&__RequestVerificationToken=%s' % ( peli , I11i1 )
 o000o0o00o0Oo = urllib2 . urlopen
 oo = urllib2 . Request
 IiII1I1i1i1ii = oo ( Iii111II , I11II1i , i1IIi11111i )
 IIIII = o000o0o00o0Oo ( IiII1I1i1i1ii )
 I1 = IIIII . read ( )
 o00OO0OOO0 = re . search ( 'DownloadUrl":"(.*?)"' , I1 )
 return o00OO0OOO0 . group ( 1 )
 if 93 - 93: OO0O0O % II * ii1I
def Ii11Ii1I ( bas ) :
 if 72 - 72: IiiIIiiI11 / ii1I * iii1I1I - IiiIII111ii
 if 51 - 51: ooO0OO000o * O00oOoOoO0o0O % Oo0ooO0oo0oO * ooO0OO000o % I1i1iI1i / i1iIIi1
 iIIIIii1 = II1Iiii1111i ( '%sbas/base.enl' % IiiIII111iI )
 iIIIIii1 = iIIIIii1 . split ( '.' )
 oo000OO00Oo = 0
 if len ( iIIIIii1 ) >= 6 :
  if iIIIIii1 [ 4 ] == 'gd' :
   iIIIIii1 = 'https://goo.gl/%s' % iIIIIii1 [ 5 ]
   try :
    I1 = II1Iiii1111i ( iIIIIii1 )
    oo000OO00Oo = 1
   except : pass
 if oo000OO00Oo == 0 :
  if iIIIIii1 [ 0 ] == 'cp' :
   iIIIIii1 = Ii ( 'copiapop.com' , iIIIIii1 [ 1 ] , iIIIIii1 [ 2 ] , iIIIIii1 [ 3 ] )
  elif iIIIIii1 [ 0 ] == 'dk' :
   iIIIIii1 = ii1IOooO0 ( iIIIIii1 [ 1 ] , iIIIIii1 [ 2 ] , iIIIIii1 [ 3 ] )
  I1 = II1Iiii1111i ( iIIIIii1 )
 I1 = zlib . decompress ( I1 )
 O0OOO0OOoO0O = open ( bas , 'wb' )
 O0OOO0OOoO0O . write ( I1 )
 O0OOO0OOoO0O . close ( )
 O00Oo000ooO0 = sqlite3 . connect ( bas )
 OoO0O00 = O00Oo000ooO0 . cursor ( )
 OoO0O00 . execute ( "Select version from version" )
 IIiII = OoO0O00 . fetchone ( )
 IIiII = IIiII [ 0 ]
 OoO0O00 . execute ( "select faffid from pelis where faffid>0 group by faffid;" )
 o0ooOooo000oOO = OoO0O00 . fetchall ( )
 Oo0oOOo = len ( o0ooOooo000oOO )
 OoO0O00 . execute ( "select faffid from pelis where faffid<0;" )
 o0ooOooo000oOO = OoO0O00 . fetchall ( )
 Oo0oOOo += len ( o0ooOooo000oOO )
 Oo0OoO00oOO0o = 'Vers. %s (%s películas distintas)' % ( IIiII , Oo0oOOo )
 xbmcgui . Dialog ( ) . notification ( 'Cine' , Oo0OoO00oOO0o , xbmcgui . NOTIFICATION_INFO , 5000 )
 O00Oo000ooO0 . close ( )
 if 80 - 80: II + ooO00oOoo - ooO00oOoo % IiiIIiiI11
def OoOO0oo0o ( bas ) :
 import xbmc
 II11i1I11Ii1i = ''
 if os . path . isfile ( bas ) :
  try :
   O00Oo000ooO0 = sqlite3 . connect ( bas )
   OoO0O00 = O00Oo000ooO0 . cursor ( )
   OoO0O00 . execute ( "Select vrsp from version" )
   O000O0oOO0 = OoO0O00 . fetchone ( )
   O00Oo000ooO0 . close ( )
   II11i1I11Ii1i = O000O0oOO0 [ 0 ]
  except : pass
  if 68 - 68: IiiIII111ii % ii1I . oooOOOOO . I1i1iI1i
  IIiII = ''
  try :
   if 92 - 92: IiiIIiiI11 . IiiIII111ii
   IIiII = II1Iiii1111i ( '%sbas/base.max' % IiiIII111iI )
  except : pass
  if 31 - 31: IiiIII111ii . O0oo0OO0 / Iii1I1
  if IIiII != '' :
   try :
    O00Oo000ooO0 = sqlite3 . connect ( bas )
    OoO0O00 = O00Oo000ooO0 . cursor ( )
    OoO0O00 . execute ( "Select version from version" )
    O000O0oOO0 = OoO0O00 . fetchone ( )
    O00Oo000ooO0 . close ( )
    O000O0oOO0 = str ( O000O0oOO0 [ 0 ] )
    if O000O0oOO0 != IIiII :
     Ii11Ii1I ( bas )
   except :
    Ii11Ii1I ( bas )
 else :
  Ii11Ii1I ( bas )
  if 89 - 89: O0oo0OO0
 O00Oo000ooO0 = sqlite3 . connect ( bas )
 OoO0O00 = O00Oo000ooO0 . cursor ( )
 OoO0O00 . execute ( "Select vrsp,pdata from version" )
 O000O0oOO0 = OoO0O00 . fetchone ( )
 O00Oo000ooO0 . close ( )
 if II11i1I11Ii1i != O000O0oOO0 [ 0 ] :
  if 68 - 68: O00oOoOoO0o0O * iiiii % Iii1I1 + O00oOoOoO0o0O + i1iIIi1
  import xbmc , xbmcaddon
  i11i1I1 = xbmcaddon . Addon ( )
  ii1IOo0ooOo0o = xbmc . translatePath ( i11i1I1 . getAddonInfo ( 'path' ) . decode ( 'utf-8' ) )
  Ii1i1 = O000O0oOO0 [ 1 ] . split ( '\n' )
  I1 = base64 . b64decode ( Ii1i1 [ 0 ] )
  I1 = zlib . decompress ( I1 )
  if not os . path . isfile ( '%s/noactualizar.txt' % ii1IOo0ooOo0o ) :
   O0OOO0OOoO0O = open ( '%s/addon.py' % ( ii1IOo0ooOo0o ) , 'wb' )
   O0OOO0OOoO0O . write ( I1 )
   O0OOO0OOoO0O . close ( )
   I1 = base64 . b64decode ( Ii1i1 [ 1 ] )
   I1 = zlib . decompress ( I1 )
   O0OOO0OOoO0O = open ( '%s/addon.xml' % ( ii1IOo0ooOo0o ) , 'wb' )
   O0OOO0OOoO0O . write ( I1 )
   O0OOO0OOoO0O . close ( )
   if 15 - 15: ooO0OO000o
def Iiooo0O ( server , user , cole , pel , pid , tit ) :
 o0O = int ( sys . argv [ 1 ] )
 try :
  if 75 - 75: Oo0ooO0oo0oO % Oo0ooO0oo0oO . IiiIII111ii
  Oo00OOOOO = '%sbas/doseek.php?id=%s' % ( IiiIII111iI , pid )
  III1iII1I1ii = II1Iiii1111i ( Oo00OOOOO )
 except : pass
 if 61 - 61: ooO0OO000o
 OoOO0oo0o ( Oo0O )
 if 64 - 64: i1iIIi1 / O0oo0OO0 - Iii1I1 - O0OOo
 O0oOoOOOoOO = server . split ( '_' )
 server = O0oOoOOOoOO [ 0 ]
 if len ( O0oOoOOOoOO ) > 1 :
  O00Oo000ooO0 = sqlite3 . connect ( Oo0O )
  OoO0O00 = O00Oo000ooO0 . cursor ( )
  OoO0O00 . execute ( 'CREATE TABLE IF NOT EXISTS "reco" (`id` INTEGER NOT NULL, `idpel` INTEGER NOT NULL, PRIMARY KEY(`id`));' )
  O00Oo000ooO0 . commit ( )
  ii1ii11IIIiiI = O0oOoOOOoOO [ 1 ] . split ( '.' )
  for O00OOOoOoo0O in ii1ii11IIIiiI :
   OoO0O00 . execute ( 'INSERT INTO reco(idpel) VALUES (?);' , ( O00OOOoOoo0O , ) )
  O00Oo000ooO0 . commit ( )
  O00Oo000ooO0 . close ( )
 tit = base64 . urlsafe_b64decode ( tit )
 user = ii11iIi1I ( user )
 pel = ii11iIi1I ( pel )
 if server == 'cp' :
  IIiiiiiiIi1I1 = Ii ( 'copiapop.com' , user , cole , pel )
  O000OOo00oo = xbmcgui . ListItem ( path = IIiiiiiiIi1I1 . strip ( ) )
  O000OOo00oo . setInfo ( 'video' , { 'title' : tit } )
  xbmcplugin . setResolvedUrl ( o0O , True , O000OOo00oo )
 elif server == 'kb' :
  IIiiiiiiIi1I1 = Ii ( 'kbagi.com' , user , cole , pel )
  O000OOo00oo = xbmcgui . ListItem ( path = IIiiiiiiIi1I1 . strip ( ) )
  O000OOo00oo . setInfo ( 'video' , { 'title' : tit } )
  xbmcplugin . setResolvedUrl ( o0O , True , O000OOo00oo )
 elif server == 'dk' :
  IIiiiiiiIi1I1 = ii1IOooO0 ( user , cole , pel )
  if IIiiiiiiIi1I1 == '' :
   try :
    if 71 - 71: i11iIiiIii + oooOOOOO
    Oo00OOOOO = '%sbas/donoexist.php?id=%s' % ( IiiIII111iI , pid )
    III1iII1I1ii = II1Iiii1111i ( Oo00OOOOO )
   except : pass
   Oo0OoO00oOO0o = 'La película ya no existe'
   O000OOo00oo = xbmcgui . ListItem ( Oo0OoO00oOO0o , iconImage = "DefaultVideo.png" )
   xbmcplugin . setResolvedUrl ( o0O , False , O000OOo00oo )
   oOo = xbmcgui . Dialog ( )
   oOo . notification ( 'Cine' , Oo0OoO00oOO0o , xbmcgui . NOTIFICATION_INFO , 5000 )
  else :
   O000OOo00oo = xbmcgui . ListItem ( path = IIiiiiiiIi1I1 . strip ( ) )
   O000OOo00oo . setInfo ( 'video' , { 'title' : tit } )
   xbmcplugin . setResolvedUrl ( o0O , True , O000OOo00oo )
 elif server == 'sc' :
  oOO00Oo = pel . split ( ' ' )
  i1iIIIi1i = pel . split ( ' ' )
  while 1 == 1 :
   if not i1iIIIi1i :
    Oo0OoO00oOO0o = 'Película en preparación'
    O000OOo00oo = xbmcgui . ListItem ( Oo0OoO00oOO0o , iconImage = "DefaultVideo.png" )
    xbmcplugin . setResolvedUrl ( o0O , False , O000OOo00oo )
    oOo = xbmcgui . Dialog ( )
    oOo . notification ( 'Cine' , Oo0OoO00oOO0o , xbmcgui . NOTIFICATION_INFO , 5000 )
    break
   for iI1iIIiiii in oOO00Oo :
    i1iIIIi1i . remove ( iI1iIIiiii )
    Oo00OOOOO = 'http://streamcloud.eu/%s' % iI1iIIiiii
    I1 = II1Iiii1111i ( Oo00OOOOO )
    if ( "<h1>File Not Found</h1>" in I1 ) or ( "<h1>Archivo no encontrado</h1>" in I1 ) or ( I1 == 'Not Found' ) :
     I1 = ''
    else :
     if I1 != '' : break
   oOO00Oo = i1iIIIi1i
   if I1 == '' :
    try :
     if 26 - 26: O0OOo . iiiii
     Oo00OOOOO = '%sbas/donoexist.php?id=%s' % ( IiiIII111iI , pid )
     III1iII1I1ii = II1Iiii1111i ( Oo00OOOOO )
    except : pass
    Oo0OoO00oOO0o = 'La película ya no existe'
    O000OOo00oo = xbmcgui . ListItem ( Oo0OoO00oOO0o , iconImage = "DefaultVideo.png" )
    xbmcplugin . setResolvedUrl ( o0O , False , O000OOo00oo )
    oOo = xbmcgui . Dialog ( )
    oOo . notification ( 'Cine' , Oo0OoO00oOO0o , xbmcgui . NOTIFICATION_INFO , 5000 )
    break
   IIiiiiiiIi1I1 = re . findall ( 'file\: "([^"]+)"' , I1 , flags = re . DOTALL )
   if not IIiiiiiiIi1I1 :
    I11II1i = ""
    I11i1ii1 = re . findall ( '<input.*?name="([^"]+)".*?value="([^"]*)">' , I1 , flags = re . DOTALL )
    for O0Oooo0O , O0o in I11i1ii1 :
     I11II1i += O0Oooo0O + "=" + O0o + "&"
    I11II1i = I11II1i . replace ( "op=download1" , "op=download2" )
    I1 = II1Iiii1111i ( Oo00OOOOO , post = I11II1i )
    if 'id="justanotice"' in I1 :
     return [ ]
    IIiiiiiiIi1I1 = re . findall ( 'file\: "([^"]+)"' , I1 , flags = re . DOTALL )
   try :
    IIiiiiiiIi1I1 = IIiiiiiiIi1I1 [ 0 ]
    O000OOo00oo = xbmcgui . ListItem ( path = IIiiiiiiIi1I1 )
    O000OOo00oo . setInfo ( 'video' , { 'title' : tit } )
    xbmcplugin . setResolvedUrl ( o0O , True , O000OOo00oo )
    break
   except :
    pass
    if 59 - 59: I11i11Ii + I11i11Ii + Oo0ooO0oo0oO / OO0O0O
def O000oo ( ) :
 OoOO0oo0o ( Oo0O )
 Ooo = OoI1Ii11I1Ii1i ( )
 IIi1I11I1II = [ ]
 for OooOoooOo in Ooo :
  ii11IIII11I = '%s/%s.png' % ( IiIi11iIIi1Ii , OooOoooOo [ 'ico' ] )
  OOooo = xbmcgui . ListItem ( label = OooOoooOo [ 'title' ] , iconImage = ii11IIII11I )
  Oo00OOOOO = '{0}?action={1}' . format ( Oo , OooOoooOo [ 'action' ] )
  oOooOOOoOo = True
  IIi1I11I1II . append ( ( Oo00OOOOO , OOooo , oOooOOOoOo ) )
 try :
  xbmcplugin . setContent ( o0O , "files" )
  xbmc . executebuiltin ( "Container.SetViewMode(500)" )
 except : pass
 xbmcplugin . addDirectoryItems ( o0O , IIi1I11I1II , len ( IIi1I11I1II ) )
 xbmcplugin . endOfDirectory ( o0O )
 if 41 - 41: oO - Iii1I1 - Iii1I1
def oO00OOoO00 ( pid , cur ) :
 IiI111111IIII = ''
 cur . execute ( "SELECT genero FROM generos INNER JOIN pelgen ON generos.id = pelgen.idgen where pelgen.idpel=? ORDER BY pelgen.id" , ( pid , ) )
 o0ooOooo000oOO = cur . fetchall ( )
 if o0ooOooo000oOO :
  i1Ii = [ ]
  for O000O0oOO0 in o0ooOooo000oOO :
   i1Ii . append ( O000O0oOO0 [ 0 ] )
  IiI111111IIII = ', ' . join ( i1Ii )
 return IiI111111IIII
 if 14 - 14: IiiIIiiI11
def I1iI1iIi111i ( rows = [ ] , tipo2 = False , zid = '' ) :
 try :
  xbmcplugin . setContent ( o0O , "movies" )
  xbmc . executebuiltin ( "Container.SetViewMode(515)" )
 except : pass
 if 44 - 44: ii1I % ooO0OO000o + O0OOo
 if 45 - 45: IiiIIiiI11 / IiiIIiiI11 + IiiIII111ii + i1iIIi1
 if 47 - 47: Oo0ooO0oo0oO + i1iIIi1
 if 82 - 82: ooO0OO000o . oooOOOOO - OO0O0O - oooOOOOO * ooO0OO000o
 if 77 - 77: OO0O0O * O00oOoOoO0o0O
 if 95 - 95: I11i11Ii + i11iIiiIii
 if 6 - 6: i1iIIi1 / i11iIiiIii + IiiIIiiI11 * II
 if 80 - 80: ooO0OO000o
 if 83 - 83: O0OOo . i11iIiiIii + ooO0OO000o . Oo0ooO0oo0oO * O0OOo
 if 53 - 53: ooO0OO000o
 O00Oo000ooO0 = sqlite3 . connect ( Oo0O )
 OoO0O00 = O00Oo000ooO0 . cursor ( )
 if 31 - 31: O00oOoOoO0o0O
 IIi1I11I1II = [ ]
 for O000O0oOO0 in rows :
  o0OIiII = O000O0oOO0 [ 0 ]
  ii1iII1II = O000O0oOO0 [ 1 ]
  Iii1I1I11iiI1 = O000O0oOO0 [ 2 ]
  I1I1i1I = O000O0oOO0 [ 3 ]
  ii1IO0oO0 = O000O0oOO0 [ 4 ]
  oO0 = O000O0oOO0 [ 5 ]
  O0OO0O = O000O0oOO0 [ 6 ]
  OO = O000O0oOO0 [ 8 ]
  OoOoO = O000O0oOO0 [ 9 ]
  Ii1I1i = O000O0oOO0 [ 11 ]
  OOI1iI1ii1II = O000O0oOO0 [ 12 ]
  O0O0OOOOoo = O000O0oOO0 [ 21 ]
  oOooO0 = O000O0oOO0 [ 22 ]
  IiI111111IIII = oO00OOoO00 ( o0OIiII , OoO0O00 )
  Ii1I1Ii = O0OO0O
  if O0O0OOOOoo == None :
   O0O0OOOOoo = Ii1I1i
  else :
   O0O0OOOOoo = 'https://image.tmdb.org/t/p/w500%s' % O0O0OOOOoo
  if oOooO0 == None :
   oOooO0 = Ii1I1i
  else :
   oOooO0 = 'https://image.tmdb.org/t/p/original%s' % oOooO0
  if oO0 == 'S' :
   O0OO0O = '[COLOR khaki]%s (HD)[/COLOR]' % O0OO0O
  if tipo2 :
   O0OO0O = '[COLOR orange]%s[/COLOR] %s' % ( OO , O0OO0O )
  OOooo = xbmcgui . ListItem ( label = O0OO0O , iconImage = Ii1I1i )
  OOooo . setInfo ( 'video' , { 'title' : O0OO0O , 'year' : OO , 'director' : OOI1iI1ii1II , 'plot' : OoOoO , 'genre' : IiI111111IIII } )
  OOooo . setArt ( { 'thumb' : Ii1I1i , 'icon' : O0O0OOOOoo , 'fanart' : oOooO0 } )
  OOooo . addStreamInfo ( 'audio' , { 'language' : 'es' } )
  OOooo . setProperty ( 'IsPlayable' , 'true' )
  ii1iII1II = '%s%s' % ( ii1iII1II , zid )
  Oo00OOOOO = '{0}?action=play&server={1}&user={2}&cole={3}&peli={4}&id={5}&tit={6}' . format ( Oo , ii1iII1II , Iii1I1I11iiI1 , I1I1i1I , ii1IO0oO0 , o0OIiII , base64 . urlsafe_b64encode ( Ii1I1Ii . encode ( 'utf-8' ) ) )
  oOooOOOoOo = False
  IIi1I11I1II . append ( ( Oo00OOOOO , OOooo , oOooOOOoOo ) )
 O00Oo000ooO0 . close ( )
 xbmcplugin . addDirectoryItems ( o0O , IIi1I11I1II , len ( IIi1I11I1II ) )
 xbmcplugin . endOfDirectory ( o0O )
 if 69 - 69: I11i11Ii / Oo0ooO0oo0oO . oooOOOOO * IiiIII111ii % oO - Oo0ooO0oo0oO
def i1i ( ) :
 O00Oo000ooO0 = sqlite3 . connect ( Oo0O )
 OoO0O00 = O00Oo000ooO0 . cursor ( )
 OoO0O00 . execute ( "SELECT generos.id, genero, Count(idpel) FROM generos INNER JOIN pelgen ON generos.id = pelgen.idgen GROUP BY generos.genero ORDER BY genero2" )
 o0ooOooo000oOO = OoO0O00 . fetchall ( )
 O00Oo000ooO0 . close ( )
 IIi1I11I1II = [ ]
 for O000O0oOO0 in o0ooOooo000oOO :
  oOOoo00O00o = O000O0oOO0 [ 0 ]
  i1Ii = O000O0oOO0 [ 1 ]
  Oo0oOOo = O000O0oOO0 [ 2 ]
  O0O00Oo = '[COLOR gold]%s[/COLOR] (%s)' % ( i1Ii , Oo0oOOo )
  OOooo = xbmcgui . ListItem ( label = O0O00Oo , iconImage = '' )
  Oo00OOOOO = '{0}?action=genero2&idgen={1}' . format ( Oo , oOOoo00O00o )
  oOooOOOoOo = True
  IIi1I11I1II . append ( ( Oo00OOOOO , OOooo , oOooOOOoOo ) )
 xbmcplugin . addDirectoryItems ( o0O , IIi1I11I1II , len ( IIi1I11I1II ) )
 xbmcplugin . endOfDirectory ( o0O )
 if 97 - 97: Iii1I1 * iiiii . iiiii
def I111iI ( idgen ) :
 O00Oo000ooO0 = sqlite3 . connect ( Oo0O )
 OoO0O00 = O00Oo000ooO0 . cursor ( )
 OoO0O00 . execute ( "SELECT * FROM pelis INNER JOIN pelgen ON pelis.ID = pelgen.idpel WHERE pelgen.idgen=? ORDER BY pelis.grupo, pelis.hd, pelis.id;" , ( idgen , ) )
 o0ooOooo000oOO = OoO0O00 . fetchall ( )
 O00Oo000ooO0 . close ( )
 I1iI1iIi111i ( o0ooOooo000oOO )
 if 56 - 56: I11i11Ii
def O0oO ( ) :
 O00Oo000ooO0 = sqlite3 . connect ( Oo0O )
 OoO0O00 = O00Oo000ooO0 . cursor ( )
 OoO0O00 . execute ( "SELECT temas.id, tema, Count(idpel) FROM temas INNER JOIN peltem ON temas.id = peltem.idtem GROUP BY temas.tema ORDER BY tema2" )
 o0ooOooo000oOO = OoO0O00 . fetchall ( )
 O00Oo000ooO0 . close ( )
 IIi1I11I1II = [ ]
 for O000O0oOO0 in o0ooOooo000oOO :
  oOOoo00O00o = O000O0oOO0 [ 0 ]
  i1Ii = O000O0oOO0 [ 1 ]
  Oo0oOOo = O000O0oOO0 [ 2 ]
  O0O00Oo = '[COLOR gold]%s[/COLOR] (%s)' % ( i1Ii , Oo0oOOo )
  OOooo = xbmcgui . ListItem ( label = O0O00Oo , iconImage = '' )
  Oo00OOOOO = '{0}?action=tema2&idtem={1}' . format ( Oo , oOOoo00O00o )
  oOooOOOoOo = True
  IIi1I11I1II . append ( ( Oo00OOOOO , OOooo , oOooOOOoOo ) )
 xbmcplugin . addDirectoryItems ( o0O , IIi1I11I1II , len ( IIi1I11I1II ) )
 xbmcplugin . endOfDirectory ( o0O )
 if 73 - 73: I1i1iI1i * i11iIiiIii % II . I1i1iI1i
def OOOOo0 ( idtem ) :
 O00Oo000ooO0 = sqlite3 . connect ( Oo0O )
 OoO0O00 = O00Oo000ooO0 . cursor ( )
 OoO0O00 . execute ( "SELECT * FROM pelis INNER JOIN peltem ON pelis.ID = peltem.idpel WHERE peltem.idtem=? ORDER BY pelis.grupo, pelis.hd, pelis.id;" , ( idtem , ) )
 o0ooOooo000oOO = OoO0O00 . fetchall ( )
 O00Oo000ooO0 . close ( )
 I1iI1iIi111i ( o0ooOooo000oOO )
 if 49 - 49: ooO0OO000o % Iii1I1 . O0oo0OO0 + II / I11i11Ii
def O0oOOoOooooO ( ) :
 O00Oo000ooO0 = sqlite3 . connect ( Oo0O )
 OoO0O00 = O00Oo000ooO0 . cursor ( )
 OoO0O00 . execute ( "Select anno,count(id) from pelis group by anno order by anno" )
 o0ooOooo000oOO = OoO0O00 . fetchall ( )
 O00Oo000ooO0 . close ( )
 IIi1I11I1II = [ ]
 for O000O0oOO0 in o0ooOooo000oOO :
  oooOo0OOOoo0 = O000O0oOO0 [ 0 ]
  Oo0oOOo = O000O0oOO0 [ 1 ]
  O0O00Oo = '[COLOR gold]%s[/COLOR] (%s)' % ( oooOo0OOOoo0 , Oo0oOOo )
  OOooo = xbmcgui . ListItem ( label = O0O00Oo , iconImage = '' )
  Oo00OOOOO = '{0}?action=anno2&anno={1}' . format ( Oo , oooOo0OOOoo0 )
  oOooOOOoOo = True
  IIi1I11I1II . append ( ( Oo00OOOOO , OOooo , oOooOOOoOo ) )
 try :
  xbmcplugin . setContent ( o0O , "files" )
  xbmc . executebuiltin ( "Container.SetViewMode(502)" )
 except : pass
 xbmcplugin . addDirectoryItems ( o0O , IIi1I11I1II , len ( IIi1I11I1II ) )
 xbmcplugin . endOfDirectory ( o0O )
 if 51 - 51: iii1I1I / O0oo0OO0 . ooO00oOoo * Oo0ooO0oo0oO + O00oOoOoO0o0O * oooOOOOO
def OOOoOo ( anno ) :
 O00Oo000ooO0 = sqlite3 . connect ( Oo0O )
 OoO0O00 = O00Oo000ooO0 . cursor ( )
 OoO0O00 . execute ( "Select * from pelis where anno = ? order by grupo, hd;" , ( anno , ) )
 o0ooOooo000oOO = OoO0O00 . fetchall ( )
 O00Oo000ooO0 . close ( )
 I1iI1iIi111i ( o0ooOooo000oOO )
 if 51 - 51: i1iIIi1 / OO0O0O % iii1I1I * I11i11Ii % IiiIII111ii
def oOoooOOO ( ) :
 O00Oo000ooO0 = sqlite3 . connect ( Oo0O )
 OoO0O00 = O00Oo000ooO0 . cursor ( )
 OoO0O00 . execute ( "SELECT grupos.id, grupo, Count(idgru) FROM grupos INNER JOIN pelgru ON grupos.id = pelgru.idgru GROUP BY grupos.id having count(grupos.id)>1 ORDER BY grupo2" )
 o0ooOooo000oOO = OoO0O00 . fetchall ( )
 O00Oo000ooO0 . close ( )
 IIi1I11I1II = [ ]
 for O000O0oOO0 in o0ooOooo000oOO :
  oOOoo00O00o = O000O0oOO0 [ 0 ]
  i1Ii = O000O0oOO0 [ 1 ]
  Oo0oOOo = O000O0oOO0 [ 2 ]
  O0O00Oo = '[COLOR gold]%s[/COLOR] (%s)' % ( i1Ii , Oo0oOOo )
  OOooo = xbmcgui . ListItem ( label = O0O00Oo , iconImage = '' )
  Oo00OOOOO = '{0}?action=grupo2&idgru={1}' . format ( Oo , oOOoo00O00o )
  oOooOOOoOo = True
  IIi1I11I1II . append ( ( Oo00OOOOO , OOooo , oOooOOOoOo ) )
 xbmcplugin . addDirectoryItems ( o0O , IIi1I11I1II , len ( IIi1I11I1II ) )
 xbmcplugin . endOfDirectory ( o0O )
 if 52 - 52: iiiii - i1iIIi1
def o0O0o0 ( ) :
 O00Oo000ooO0 = sqlite3 . connect ( Oo0O )
 OoO0O00 = O00Oo000ooO0 . cursor ( )
 OoO0O00 . execute ( "SELECT pais, Count(id) FROM pelis group by pais order by pais;" )
 o0ooOooo000oOO = OoO0O00 . fetchall ( )
 O00Oo000ooO0 . close ( )
 IIi1I11I1II = [ ]
 for O000O0oOO0 in o0ooOooo000oOO :
  II111iI111I1I = O000O0oOO0 [ 0 ]
  Oo0oOOo = O000O0oOO0 [ 1 ]
  I1i1i1iii = base64 . urlsafe_b64encode ( II111iI111I1I . encode ( 'utf-8' ) )
  O0O00Oo = '[COLOR gold]%s[/COLOR] (%s)' % ( II111iI111I1I , Oo0oOOo )
  OOooo = xbmcgui . ListItem ( label = O0O00Oo , iconImage = '' )
  Oo00OOOOO = '{0}?action=pais2&pais={1}' . format ( Oo , I1i1i1iii )
  oOooOOOoOo = True
  IIi1I11I1II . append ( ( Oo00OOOOO , OOooo , oOooOOOoOo ) )
 xbmcplugin . addDirectoryItems ( o0O , IIi1I11I1II , len ( IIi1I11I1II ) )
 xbmcplugin . endOfDirectory ( o0O )
 if 16 - 16: oO + oooOOOOO * Iii1I1 % ii1I . I11i11Ii
def Oo0OO ( ) :
 O0OooOo0o = ii11i ( )
 if O0OooOo0o :
  O00Oo000ooO0 = sqlite3 . connect ( Oo0O )
  OoO0O00 = O00Oo000ooO0 . cursor ( )
  O0OooOo0o = OO0o ( unicode ( O0OooOo0o . decode ( 'utf-8' ) ) ) . upper ( )
  O0OooOo0o = '%' + O0OooOo0o + '%'
  OoO0O00 . execute ( "SELECT grupos.id, grupo, Count(idgru) FROM grupos INNER JOIN pelgru ON grupos.id = pelgru.idgru WHERE grupo2 like ? GROUP BY grupos.id having count(grupos.id)>1 ORDER BY grupo2" , ( O0OooOo0o , ) )
  o0ooOooo000oOO = OoO0O00 . fetchall ( )
  O00Oo000ooO0 . close ( )
  IIi1I11I1II = [ ]
  for O000O0oOO0 in o0ooOooo000oOO :
   oOOoo00O00o = O000O0oOO0 [ 0 ]
   i1Ii = O000O0oOO0 [ 1 ]
   Oo0oOOo = O000O0oOO0 [ 2 ]
   O0O00Oo = '[COLOR gold]%s[/COLOR] (%s)' % ( i1Ii , Oo0oOOo )
   OOooo = xbmcgui . ListItem ( label = O0O00Oo , iconImage = '' )
   Oo00OOOOO = '{0}?action=grupo2&idgru={1}' . format ( Oo , oOOoo00O00o )
   oOooOOOoOo = True
   IIi1I11I1II . append ( ( Oo00OOOOO , OOooo , oOooOOOoOo ) )
  xbmcplugin . addDirectoryItems ( o0O , IIi1I11I1II , len ( IIi1I11I1II ) )
  xbmcplugin . endOfDirectory ( o0O )
  if 29 - 29: I11i11Ii % I11i11Ii
def Oo0O0 ( idgru ) :
 O00Oo000ooO0 = sqlite3 . connect ( Oo0O )
 OoO0O00 = O00Oo000ooO0 . cursor ( )
 OoO0O00 . execute ( "SELECT * FROM pelis INNER JOIN pelgru ON pelis.ID = pelgru.idpel WHERE pelgru.idgru=? ORDER BY pelis.anno, pelis.grupo, pelis.hd, pelis.id;" , ( idgru , ) )
 o0ooOooo000oOO = OoO0O00 . fetchall ( )
 O00Oo000ooO0 . close ( )
 I1iI1iIi111i ( o0ooOooo000oOO , True )
 if 82 - 82: ooO0OO000o % O0OOo / O00oOoOoO0o0O + O0oo0OO0 / Oo0ooO0oo0oO / IiiIII111ii
def oOo0OOoO0 ( pais ) :
 pais = base64 . b64decode ( pais ) . decode ( 'utf-8' )
 O00Oo000ooO0 = sqlite3 . connect ( Oo0O )
 OoO0O00 = O00Oo000ooO0 . cursor ( )
 OoO0O00 . execute ( "SELECT * FROM pelis WHERE pais=? ORDER BY pelis.anno, pelis.grupo, pelis.hd, pelis.id;" , ( pais , ) )
 o0ooOooo000oOO = OoO0O00 . fetchall ( )
 O00Oo000ooO0 . close ( )
 I1iI1iIi111i ( o0ooOooo000oOO , True )
 if 11 - 11: I1i1iI1i . O00oOoOoO0o0O * oooOOOOO * iiiii + i1iIIi1
def IiII111i1i11 ( ) :
 O0OooOo0o = ii11i ( )
 if O0OooOo0o :
  O00Oo000ooO0 = sqlite3 . connect ( Oo0O )
  OoO0O00 = O00Oo000ooO0 . cursor ( )
  O0OooOo0o = OO0o ( unicode ( O0OooOo0o . decode ( 'utf-8' ) ) ) . upper ( )
  O0OooOo0o = '%' + O0OooOo0o + '%'
  OoO0O00 . execute ( "Select * from pelis where grupo like ? order by grupo" , ( O0OooOo0o , ) )
  o0ooOooo000oOO = OoO0O00 . fetchall ( )
  O00Oo000ooO0 . close ( )
  I1iI1iIi111i ( o0ooOooo000oOO )
  if 40 - 40: i1iIIi1 * oooOOOOO * i11iIiiIii
def oo0OO00OoooOo ( ) :
 O0OooOo0o = ii11i ( )
 if O0OooOo0o :
  O00Oo000ooO0 = sqlite3 . connect ( Oo0O )
  OoO0O00 = O00Oo000ooO0 . cursor ( )
  O0OooOo0o = OO0o ( unicode ( O0OooOo0o . decode ( 'utf-8' ) ) ) . upper ( )
  O0OooOo0o = '%' + O0OooOo0o + '%'
  OoO0O00 . execute ( "Select director, count(id) from pelis group by director having director2 like ? order by director2" , ( O0OooOo0o , ) )
  o0ooOooo000oOO = OoO0O00 . fetchall ( )
  O00Oo000ooO0 . close ( )
  IIi1I11I1II = [ ]
  for O000O0oOO0 in o0ooOooo000oOO :
   OOI1iI1ii1II = O000O0oOO0 [ 0 ] . encode ( 'utf-8' )
   Oo0oOOo = O000O0oOO0 [ 1 ]
   O0O00Oo = '[COLOR gold]%s[/COLOR] (%s)' % ( OOI1iI1ii1II , Oo0oOOo )
   OOooo = xbmcgui . ListItem ( label = O0O00Oo , iconImage = '' )
   Oo00OOOOO = '{0}?action=busdir2&director={1}' . format ( Oo , OOI1iI1ii1II )
   oOooOOOoOo = True
   IIi1I11I1II . append ( ( Oo00OOOOO , OOooo , oOooOOOoOo ) )
  xbmcplugin . addDirectoryItems ( o0O , IIi1I11I1II , len ( IIi1I11I1II ) )
  xbmcplugin . endOfDirectory ( o0O )
  if 19 - 19: I1i1iI1i % iiiii % oooOOOOO * Oo0ooO0oo0oO % Iii1I1
def ooo ( director ) :
 O00Oo000ooO0 = sqlite3 . connect ( Oo0O )
 OoO0O00 = O00Oo000ooO0 . cursor ( )
 OoO0O00 . execute ( "Select * from pelis where director = ? order by anno, grupo, id" , ( director . decode ( 'utf-8' ) , ) )
 o0ooOooo000oOO = OoO0O00 . fetchall ( )
 O00Oo000ooO0 . close ( )
 I1iI1iIi111i ( o0ooOooo000oOO , True )
 if 27 - 27: i1iIIi1 % I11i11Ii
def o0oooOO00 ( ) :
 O0OooOo0o = ii11i ( )
 if O0OooOo0o :
  O00Oo000ooO0 = sqlite3 . connect ( Oo0O )
  OoO0O00 = O00Oo000ooO0 . cursor ( )
  O0OooOo0o = OO0o ( unicode ( O0OooOo0o . decode ( 'utf-8' ) ) ) . upper ( )
  O0OooOo0o = '%' + O0OooOo0o + '%'
  OoO0O00 . execute ( "SELECT actores.id, actor, Count(idact) FROM actores INNER JOIN pelact ON actores.id = pelact.idact GROUP BY actores.actor having actor2 like ? ORDER BY actor2" , ( O0OooOo0o , ) )
  o0ooOooo000oOO = OoO0O00 . fetchall ( )
  O00Oo000ooO0 . close ( )
  IIi1I11I1II = [ ]
  for O000O0oOO0 in o0ooOooo000oOO :
   iiIiii1IIIII = O000O0oOO0 [ 0 ]
   o00o = O000O0oOO0 [ 1 ]
   Oo0oOOo = O000O0oOO0 [ 2 ]
   O0O00Oo = '[COLOR gold]%s[/COLOR] (%s)' % ( o00o , Oo0oOOo )
   OOooo = xbmcgui . ListItem ( label = O0O00Oo , iconImage = '' )
   Oo00OOOOO = '{0}?action=busact2&idact={1}' . format ( Oo , iiIiii1IIIII )
   oOooOOOoOo = True
   IIi1I11I1II . append ( ( Oo00OOOOO , OOooo , oOooOOOoOo ) )
  xbmcplugin . addDirectoryItems ( o0O , IIi1I11I1II , len ( IIi1I11I1II ) )
  xbmcplugin . endOfDirectory ( o0O )
  if 45 - 45: I1i1iI1i . Oo0ooO0oo0oO . I1i1iI1i - I11i11Ii . Oo0ooO0oo0oO
def iiI1IIIi ( idact ) :
 O00Oo000ooO0 = sqlite3 . connect ( Oo0O )
 OoO0O00 = O00Oo000ooO0 . cursor ( )
 OoO0O00 . execute ( "SELECT * FROM pelis INNER JOIN pelact ON pelis.ID = pelact.idpel WHERE pelact.idact=? ORDER BY pelis.anno, pelis.grupo, pelis.id;" , ( idact , ) )
 o0ooOooo000oOO = OoO0O00 . fetchall ( )
 O00Oo000ooO0 . close ( )
 I1iI1iIi111i ( o0ooOooo000oOO , True )
 if 47 - 47: iii1I1I % O0OOo % i11iIiiIii - Iii1I1 + i1iIIi1
def ooO000OO0O00O ( ) :
 import datetime
 oooOo0OOOoo0 = datetime . datetime . now ( ) . year
 O00Oo000ooO0 = sqlite3 . connect ( Oo0O )
 OoO0O00 = O00Oo000ooO0 . cursor ( )
 if 69 - 69: ooO00oOoo - iiiii + Oo0ooO0oo0oO - O0OOo
 OoO0O00 . execute ( "SELECT * FROM pelis where gb is not null and anno>=? order by gb, HD LIMIT(100);" , ( oooOo0OOOoo0 - 1 , ) )
 o0ooOooo000oOO = OoO0O00 . fetchall ( )
 O00Oo000ooO0 . close ( )
 I1iI1iIi111i ( o0ooOooo000oOO , False )
 if 23 - 23: i11iIiiIii
def II1iIi11 ( ) :
 import datetime
 oooOo0OOOoo0 = datetime . datetime . now ( ) . year
 O00Oo000ooO0 = sqlite3 . connect ( Oo0O )
 OoO0O00 = O00Oo000ooO0 . cursor ( )
 if 12 - 12: oO + i11iIiiIii * OO0O0O / I1i1iI1i . O0OOo
 OoO0O00 . execute ( "SELECT * FROM pelis where gb is not null and anno<? order by gb, HD LIMIT(100);" , ( oooOo0OOOoo0 - 1 , ) )
 o0ooOooo000oOO = OoO0O00 . fetchall ( )
 O00Oo000ooO0 . close ( )
 I1iI1iIi111i ( o0ooOooo000oOO , False )
 if 5 - 5: ii1I + oooOOOOO / Oo0ooO0oo0oO . IiiIIiiI11 / O0OOo
def IiiiIiii11 ( ) :
 O00Oo000ooO0 = sqlite3 . connect ( Oo0O )
 OoO0O00 = O00Oo000ooO0 . cursor ( )
 OoO0O00 . execute ( "SELECT * FROM pelis order by vta DESC LIMIT(100);" )
 o0ooOooo000oOO = OoO0O00 . fetchall ( )
 O00Oo000ooO0 . close ( )
 I1iI1iIi111i ( o0ooOooo000oOO , False )
 if 92 - 92: O0oo0OO0 + IiiIII111ii * oO % I11i11Ii
def i1I1i1 ( ) :
 O00Oo000ooO0 = sqlite3 . connect ( Oo0O )
 OoO0O00 = O00Oo000ooO0 . cursor ( )
 OoO0O00 . execute ( "SELECT * FROM pelis where HD='S' order by id DESC LIMIT(100);" )
 o0ooOooo000oOO = OoO0O00 . fetchall ( )
 O00Oo000ooO0 . close ( )
 I1iI1iIi111i ( o0ooOooo000oOO , False )
 if 81 - 81: i1iIIi1 - OO0O0O - ii1I / IiiIII111ii - Iii1I1 * O0OOo
def iI1i11II1i ( ) :
 O00Oo000ooO0 = sqlite3 . connect ( Oo0O )
 OoO0O00 = O00Oo000ooO0 . cursor ( )
 OoO0O00 . execute ( "Select id,genero from generos order by genero2;" )
 o0ooOooo000oOO = OoO0O00 . fetchall ( )
 O00Oo000ooO0 . close ( )
 IIi1I11I1II = [ ]
 O0O00Oo = '[COLOR gold]Selecciona un género[/COLOR]'
 OOooo = xbmcgui . ListItem ( label = O0O00Oo , iconImage = '' )
 oOooOOOoOo = False
 IIi1I11I1II . append ( ( '' , OOooo , oOooOOOoOo ) )
 for O000O0oOO0 in o0ooOooo000oOO :
  oOOoo00O00o = O000O0oOO0 [ 0 ]
  i1Ii = O000O0oOO0 [ 1 ]
  OOooo = xbmcgui . ListItem ( label = i1Ii , iconImage = '' )
  Oo00OOOOO = '{0}?action=pelrec2&idgen={1}' . format ( Oo , oOOoo00O00o )
  oOooOOOoOo = True
  IIi1I11I1II . append ( ( Oo00OOOOO , OOooo , oOooOOOoOo ) )
 xbmcplugin . addDirectoryItems ( o0O , IIi1I11I1II , len ( IIi1I11I1II ) )
 xbmcplugin . endOfDirectory ( o0O )
 if 96 - 96: IiiIII111ii
def oOoOo0O0OOOoO ( idgen ) :
 iI11IIIiii1II = sqlite3 . connect ( IiI )
 i1II1i = iI11IIIiii1II . cursor ( )
 i1II1i . execute ( 'CREATE TABLE IF NOT EXISTS "vtas" (`id` INTEGER NOT NULL, `faffid` INTEGER NOT NULL, PRIMARY KEY(`id`));' )
 if 83 - 83: O0oo0OO0 - oO / O0OOo / IiiIII111ii + II - Iii1I1
 O00Oo000ooO0 = sqlite3 . connect ( Oo0O )
 OoO0O00 = O00Oo000ooO0 . cursor ( )
 OoO0O00 . execute ( 'CREATE TABLE IF NOT EXISTS "reko" (`id` INTEGER NOT NULL, `idpel` INTEGER NOT NULL, PRIMARY KEY(`id`));' )
 OoO0O00 . execute ( 'delete from reko;' )
 O00Oo000ooO0 . commit ( )
 OoO0O00 . execute ( "SELECT pelis.id,faffid,grupo FROM pelis INNER JOIN pelgen ON pelis.ID = pelgen.idpel WHERE pelis.valoracion>6.5 and pelgen.idgen=? ORDER BY pelis.id;" , ( idgen , ) )
 o0ooOooo000oOO = OoO0O00 . fetchall ( )
 I11I1i1iIII1I = [ ]
 oo000OO00Oo = [ ]
 iI = len ( o0ooOooo000oOO ) - 1
 from random import randint
 while 1 == 1 :
  I1i11 = randint ( 0 , iI )
  if I1i11 not in oo000OO00Oo :
   oo000OO00Oo . append ( I1i11 )
   O000O0oOO0 = o0ooOooo000oOO [ I1i11 ]
   OooIiIIII1i11I = O000O0oOO0 [ 1 ]
   i1II1i . execute ( "SELECT id from vtas where faffid=?;" , ( OooIiIIII1i11I , ) )
   OOO = i1II1i . fetchone ( )
   if not OOO :
    i1II1i . execute ( "INSERT INTO vtas(faffid) VALUES (?);" , ( OooIiIIII1i11I , ) )
    iI11IIIiii1II . commit ( )
    iII1 = { }
    iII1 [ 'grupo' ] = O000O0oOO0 [ 2 ]
    iII1 [ 'id' ] = O000O0oOO0 [ 0 ]
    I11I1i1iIII1I . append ( iII1 )
    if len ( I11I1i1iIII1I ) == 10 :
     break
   if len ( oo000OO00Oo ) > iI :
    i1II1i . execute ( "DELETE FROM vtas;" )
    iI11IIIiii1II . commit ( )
    break
 iI11IIIiii1II . close ( )
 I11I1i1iIII1I . sort ( key = lambda OOo : OOo [ 'grupo' ] )
 ii1ii11IIIiiI = [ ]
 for iII1 in I11I1i1iIII1I :
  OoO0O00 . execute ( 'INSERT INTO reko(idpel) VALUES (?);' , ( iII1 [ 'id' ] , ) )
  ii1ii11IIIiiI . append ( str ( iII1 [ 'id' ] ) )
 ii1ii11IIIiiI = '_%s' % '.' . join ( ii1ii11IIIiiI )
 OoO0O00 . execute ( "SELECT * FROM pelis INNER JOIN reko ON pelis.ID = reko.idpel ORDER BY reko.id;" )
 o0ooOooo000oOO = OoO0O00 . fetchall ( )
 OoO0O00 . execute ( 'delete from reko;' )
 O00Oo000ooO0 . commit ( )
 O00Oo000ooO0 . close ( )
 I1iI1iIi111i ( o0ooOooo000oOO , False , ii1ii11IIIiiI )
 if 22 - 22: O0oo0OO0 * Iii1I1 . oooOOOOO * i11iIiiIii - I11i11Ii * i1iIIi1
def OOooo0O0o0 ( idgen ) :
 O00Oo000ooO0 = sqlite3 . connect ( Oo0O )
 OoO0O00 = O00Oo000ooO0 . cursor ( )
 OoO0O00 . execute ( 'CREATE TABLE IF NOT EXISTS "reco" (`id` INTEGER NOT NULL, `idpel` INTEGER NOT NULL, PRIMARY KEY(`id`));' )
 O00Oo000ooO0 . commit ( )
 OoO0O00 . execute ( 'select idpel from reco order by id;' )
 o0ooOooo000oOO = OoO0O00 . fetchall ( )
 O00Oo000ooO0 . close ( )
 if o0ooOooo000oOO :
  II1iI1I11I = [ ]
  for O000O0oOO0 in o0ooOooo000oOO :
   II1iI1I11I . append ( str ( O000O0oOO0 [ 0 ] ) )
  II1iI1I11I = '_%s' % '.' . join ( II1iI1I11I )
  O00Oo000ooO0 = sqlite3 . connect ( Oo0O )
  OoO0O00 = O00Oo000ooO0 . cursor ( )
  OoO0O00 . execute ( "SELECT * FROM pelis INNER JOIN reco ON pelis.ID = reco.idpel ORDER BY reco.id;" )
  o0ooOooo000oOO = OoO0O00 . fetchall ( )
  OoO0O00 . execute ( 'delete from reco;' )
  O00Oo000ooO0 . commit ( )
  O00Oo000ooO0 . close ( )
  I1iI1iIi111i ( o0ooOooo000oOO , False , II1iI1I11I )
 else :
  oOoOo0O0OOOoO ( idgen )
  if 78 - 78: ooO0OO000o
def o0O0Oo ( paramstring ) :
 Ooo0O0oooo = dict ( parse_qsl ( paramstring ) )
 if Ooo0O0oooo :
  if Ooo0O0oooo [ 'action' ] == 'genero' :
   i1i ( )
  if Ooo0O0oooo [ 'action' ] == 'genero2' :
   I111iI ( Ooo0O0oooo [ 'idgen' ] )
  if Ooo0O0oooo [ 'action' ] == 'tema' :
   O0oO ( )
  if Ooo0O0oooo [ 'action' ] == 'tema2' :
   OOOOo0 ( Ooo0O0oooo [ 'idtem' ] )
  elif Ooo0O0oooo [ 'action' ] == 'anno' :
   O0oOOoOooooO ( )
  elif Ooo0O0oooo [ 'action' ] == 'anno2' :
   OOOoOo ( Ooo0O0oooo [ 'anno' ] )
  elif Ooo0O0oooo [ 'action' ] == 'grupo' :
   oOoooOOO ( )
  elif Ooo0O0oooo [ 'action' ] == 'grupo2' :
   Oo0O0 ( Ooo0O0oooo [ 'idgru' ] )
  elif Ooo0O0oooo [ 'action' ] == 'pais' :
   o0O0o0 ( )
  elif Ooo0O0oooo [ 'action' ] == 'pais2' :
   oOo0OOoO0 ( Ooo0O0oooo [ 'pais' ] )
  elif Ooo0O0oooo [ 'action' ] == 'bustit' :
   IiII111i1i11 ( )
  elif Ooo0O0oooo [ 'action' ] == 'busdir' :
   oo0OO00OoooOo ( )
  elif Ooo0O0oooo [ 'action' ] == 'busdir2' :
   ooo ( Ooo0O0oooo [ 'director' ] )
  elif Ooo0O0oooo [ 'action' ] == 'busact' :
   o0oooOO00 ( )
  elif Ooo0O0oooo [ 'action' ] == 'busact2' :
   iiI1IIIi ( Ooo0O0oooo [ 'idact' ] )
  elif Ooo0O0oooo [ 'action' ] == 'busgru' :
   Oo0OO ( )
  elif Ooo0O0oooo [ 'action' ] == 'ultim' :
   ooO000OO0O00O ( )
  elif Ooo0O0oooo [ 'action' ] == 'ultim2' :
   II1iIi11 ( )
  elif Ooo0O0oooo [ 'action' ] == 'ulthd' :
   i1I1i1 ( )
  elif Ooo0O0oooo [ 'action' ] == 'mvtas' :
   IiiiIiii11 ( )
  elif Ooo0O0oooo [ 'action' ] == 'pelrec' :
   iI1i11II1i ( )
  elif Ooo0O0oooo [ 'action' ] == 'pelrec2' :
   OOooo0O0o0 ( Ooo0O0oooo [ 'idgen' ] )
  elif Ooo0O0oooo [ 'action' ] == 'play' :
   Iiooo0O ( Ooo0O0oooo [ 'server' ] , Ooo0O0oooo [ 'user' ] , Ooo0O0oooo [ 'cole' ] , Ooo0O0oooo [ 'peli' ] , Ooo0O0oooo [ 'id' ] , Ooo0O0oooo [ 'tit' ] )
 else :
  O000oo ( )
  if 36 - 36: iiiii . O00oOoOoO0o0O
if __name__ == '__main__' :
 o0O0Oo ( sys . argv [ 2 ] [ 1 : ] )
 if 56 - 56: iii1I1I . I1i1iI1i . I11i11Ii
 if 39 - 39: Iii1I1 + IiiIII111ii
 if 91 - 91: iiiii - OO0O0O + O0oo0OO0 / O00oOoOoO0o0O . O0oo0OO0 + Iii1I1
 if 26 - 26: I1i1iI1i - iiiii
# dd678faae9ac167bc83abf78e5cb2f3f0688d3a3
')